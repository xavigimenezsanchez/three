{"version":3,"sources":["Scene.js","Button.js","Reducer.js","App.js","serviceWorker.js","index.js"],"names":["mount","camera","controls","dragObject","init","isDragging","meshs","raycaster","THREE","mouse","plane","pNormal","pIntersect","planeIntersect","shift","texture1","load","texture2","texture3","texture4","material","map","backgroundTexture","onMouseDown","event","console","log","intersects","intersectObjects","length","enabled","copy","point","setFromNormalAndCoplanarPoint","subVectors","object","position","onMouseUp","onMouseMove","x","clientX","window","innerWidth","y","clientY","innerHeight","setFromCamera","ray","intersectPlane","addVectors","scene","background","Color","renderer","antialias","light","set","add","Scene","dispatch","spheres","useEffect","offsetParent","offsetWidth","appendChild","domElement","addEventListener","setSize","setPixelRatio","devicePixelRatio","lookAt","OrbitControls","children","filter","type","i","findIndex","uuid","geometry","radius","mesh","z","value","id","remove","update","direction","velocity","gravity","setAnimationLoop","rotation","render","ref","index","Button","onClick","sphere","state","action","splice","Reducer","reduce","initSpheres","color","App","useReducer","appReducer","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.14410b37.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport * as THREE from 'three';\nimport  OrbitControls  from 'orbit-controls-es6'\nimport { BufferAttribute, Color } from 'three';\n//https://jsfiddle.net/prisoner849/2ncyu9Lb/\n    let init = true;\n    let mount;\n    let camera;\n    let controls;\n    let isDragging = false\n    let dragObject\n    let meshs = []\n    const raycaster = new THREE.Raycaster()\n    const mouse = new THREE.Vector2()\n    const plane = new THREE.Plane()\n    const pNormal = new THREE.Vector3(0, 1, 0)\n    const pIntersect = new THREE.Vector3()\n    const planeIntersect = new THREE.Vector3()\n    const shift = new THREE.Vector3()\n    const texture1 = new THREE.TextureLoader().load('marble-texture.jpg')\n    const texture2 = new THREE.TextureLoader().load('wood.jpg')\n    const texture3 = new THREE.TextureLoader().load('water.jpg')\n    const texture4 = new THREE.TextureLoader().load('silk.jpg')\n    const material= [new THREE.MeshBasicMaterial( { map: texture3 } ), new THREE.MeshBasicMaterial( { map: texture2 } ), new THREE.MeshBasicMaterial( { map: texture1 }), new THREE.MeshBasicMaterial( { map: texture4 } )]\n    const backgroundTexture = new THREE.TextureLoader().load('three/background.jpeg')\n    const onMouseDown = (event) => {\n      console.log(meshs)\n      const intersects = raycaster.intersectObjects(meshs);\n      if (intersects.length > 0) {\n        controls.enabled = false;\n        pIntersect.copy(intersects[0].point);\n        plane.setFromNormalAndCoplanarPoint(pNormal, pIntersect);\n        shift.subVectors(intersects[0].object.position, intersects[0].point);\n        isDragging = true;\n        dragObject = intersects[0].object;\n      }\n\n    }\n    const onMouseUp = (event) => {\n      isDragging = false;\n      dragObject = null;\n      controls.enabled = true;\n    }\n    const onMouseMove = ( event ) => {\n      mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n\t\t  mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n      raycaster.setFromCamera(mouse, camera);\n\t\t\n      if (isDragging) {\n        raycaster.ray.intersectPlane(plane, planeIntersect);\n        dragObject.position.addVectors(planeIntersect, shift);\n      }\n      \n    }\n\n    // === THREE.JS CODE START ===\n    var scene = new THREE.Scene();\n    scene.background = new Color( 'orange')\n    \n    var renderer = new THREE.WebGLRenderer({ antialias: true });\n    \n    \n    // Create a directional light\n    const light = new THREE.DirectionalLight( 0xffffff, 2.0 );\n\n    // move the light back and up a bit\n    light.position.set( 10, 10, 10 );\n    \n    // remember to add the light to the scene\n    scene.add( light );\n\n    //scene.add(new THREE.GridHelper(10, 10));\n\n    \n\nconst  Scene= ({ dispatch, spheres}) => {\n  const update = (spheres) =>{\n    meshs = scene.children.filter(x=>x.type=='Mesh');\n    if (meshs.length < spheres.length){\n      for (let i=0; i < spheres.length; i++) {\n        if (scene.children.findIndex(x=>x.uuid === spheres[i].uuid) === -1){\n          const geometry = new THREE.SphereBufferGeometry( spheres[i].radius, 32, 32 );\n          var mesh = new THREE.Mesh( geometry, material[i%4] );\n          mesh.position.x= spheres[i].x\n          mesh.position.y= spheres[i].y\n          mesh.position.z= spheres[i].z\n          dispatch({type: 'SETUUID', value: {id:spheres[i].id, uuid: mesh.uuid}})\n          scene.add( mesh );\n        }   \n      }\n    } else {\n      for (let i = 0; i < meshs.length; i++ ) {\n        if (spheres.findIndex(x=>x.uuid === meshs[i].uuid) === -1) {\n          scene.remove(meshs[i])\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n      if (init) {\n        camera = new THREE.PerspectiveCamera( 60, mount.offsetParent.offsetWidth/window.innerHeight, 1, 1000 );\n\n        mount.appendChild( renderer.domElement );\n        mount.addEventListener('mousemove', onMouseMove, false)\n        mount.addEventListener('mousedown', onMouseDown, false)\n        mount.addEventListener('mouseup', onMouseUp, false)\n        renderer.setSize(mount.offsetParent.offsetWidth, window.innerHeight );\n        renderer.setPixelRatio( window.devicePixelRatio );\n        \n        camera.position.set(0, 0, 20);\n        camera.lookAt(scene.position);\n        controls = new OrbitControls(camera, renderer.domElement)\n        scene.background = backgroundTexture\n        init = false;\n      }\n    update(spheres)\n     const meshs = scene.children.filter(x=>x.type=='Mesh')\n\n    let direction = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\n    const velocity = [0.2, 0.1, 0.5, 0.2]\n    const gravity = [0.01, 0.02, 0.03, 0.01]\n    const bounce = [0.7, 0.6, 0.7, 0.8]\n    const position = [5,5,4,3]\n    renderer.setAnimationLoop(() => {\n      for (let i=0; i < meshs.length; i++) {\n        if ((meshs[i].position.y < 0 && direction[i] == -1) || (meshs[i].position.y > position[i] && direction[i] == 1)) {\n          direction[i] *= -1\n        }\n        if (position[i] > 0){\n          position[i] -= gravity[i]\n          meshs[i].position.y += velocity[i] * direction[i]\n        } else {\n          position[i] = -2\n        }\n  \n          \n        //meshs[i].rotation.x += 0.01;\n        meshs[i].rotation.z +=0.03;\n    }\n      renderer.render(scene, camera);\n    })\n    // === THREE.JS EXAMPLE CODE END ===\n  })\n  return (\n    <div ref={ref => (mount = ref)} />\n  );\n}\n\nexport default Scene;","import React, { useState } from 'react'\nimport './Button.css'\n\nlet index = 0;\n\nconst Button = ({dispatch , spheres}) => {\n    const addSphere = () => {\n        const sphere = {...spheres[index++]}\n        sphere.y += 1.5\n        sphere.x += 1.5\n        sphere.z += 1.5\n        sphere.uuid = null\n        dispatch( {type: \"ADD\", value: sphere} )\n    }\n\n    return (<button onClick={addSphere}>+</button>)\n}\n\nexport default Button","const Reducer = (state, action) => {\n    switch (action.type) {\n        case \"ADD\":\n            if (state.length === 0) {\n                return [{...action.value, id:1}]\n            }\n            return [...state, {...action.value, id:state.reduce((x,y) => x.id>y.id?x:y).id + 1}]\n        case \"DEL\":\n          return remove(state, action);\n        case \"SETUUID\":\n            const id = state.findIndex(x=> x.id===action.value.id);\n            state[id].uuid = action.value.uuid\n            return [...state]\n        case \"SET\":\n            return action.value\n        default:\n          return [...state];\n      }\n}\n\nconst remove = (state, action) => {\n    const index = state.findIndex(x=> x.id === action.value)\n    if (index !== -1) \n        state.splice(index,1)\n    return [...state]\n}\nexport default Reducer","import React, { useReducer } from 'react';\nimport Scene from './Scene'\nimport Button from './Button'\nimport appReducer from \"./Reducer\"\nimport './App.css';\n\n\nconst initSpheres = [\n    {id: 1, radius:1, color: 'green', x:0, y:0, z:1},\n    {id: 2, radius:1.1, color: 'red', x:3, y:1, z:2},\n    {id: 3, radius:0.4, color: 'blue', x:-3, y:1, z:0},\n    {id: 4, radius:1.3, color: 'orange', x:-2, y:2, z:-2}  \n  ]\n\nfunction App() {\n  const [spheres, dispatch] = useReducer(appReducer,initSpheres)\n  return (<>\n            <Scene dispatch={dispatch} spheres={spheres}/> \n            <Button  dispatch={dispatch} spheres={spheres}/> \n          </>)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}